#!/bin/sh

#########################################################################################
#                                                                                       #
#   In order use these commit hooks place them in the BASE_DIR/.git/hooks/<your-hook>   #
#                                                                                       #  
#########################################################################################

run_python_linters() {
    # the logs will contain output from previous run only
    mkdir -p logs
    echo "Running Python linters..."
    
    # linters can be installed by command: pip install <linter_name>
    echo -e "FLAKE8 \n" > logs/linter.log
    flake8 --exclude="*/migrations/*" . >> logs/linter.log

    echo -e "\n PYCODESTYLE \n" >> logs/linter.log
    pycodestyle --exclude "*/migrations/*","*/tests/*" . >> logs/linter.log

    echo -e "\n PYLINT \n" >> logs/linter.log
    pylint --load-plugins pylint_django --django-settings-module=DeliverEase.settings --ignore="*/migrations/*" buyer/* seller/* userAuth/* DeliverEase/* main/* >> logs/linter.log

    echo -e "\n BLACK \n" >> logs/linter.log
    black --diff . >> logs/linter.log 2>&1

    echo -e "\n RUFF \n" >> logs/linter.log
    ruff check . >> logs/linter.log
    
    # echo -e "\n PYDOCSTYLE \n" >> logs/linter.log
    # pydocstyle . >> logs/linter.log # matching pattern is 

    exit_code=$?

    # If the linters fail, prevent the commit
    if [ $exit_code -ne 0 ]; then
        echo "Python linters failed, Commit aborted."
        echo "Please check logs and reformat your code."
        exit 1
    fi
}

run_test(){

    echo -e "\nRunning Django test suite before committing..."

    # Running the Django test suite
    python manage.py test 

    TEST_EXIT_CODE=$?

    if [ $TEST_EXIT_CODE -ne 0 ]; then
        echo "Django tests failed. Please fix the issues before committing."
        exit 1
    fi

    echo "Django tests passed." 
    exit 0
}

run_python_linters
run_test
