#!/bin/bash

#########################################################################################
#                                                                                       #
#   In order use these commit hooks place them in the BASE_DIR/.git/hooks/<your-hook>   #
#                                                                                       #  
#########################################################################################

run_python_linters() {
    # the logs will contain output from previous run only
    mkdir -p logs
    echo > logs/linter.log
    fail=false

    # Get the list of staged files
    staged_files=$(git diff --cached --name-only --diff-filter=AMR)

    # linters can be installed by command: pip install <linter_name>
    echo "Running Python linters..."

    for file in $staged_files; do
        if [[ $file == *.py && $file != */migrations/* && $file != *test* && $file != *settings* && $file != *init* ]]; then

            echo -e "File Path: $file\n" >> logs/linter.log

            echo -e "FLAKE8:" >> logs/linter.log
            flake8 $file >> logs/linter.log

            echo -e "PYCODESTYLE:" >> logs/linter.log
            pycodestyle $file >> logs/linter.log

            echo -e "PYLINT:" >> logs/linter.log
            pylint $file >> logs/linter.log

            echo -e "BLACK:" >> logs/linter.log
            black --diff $file >> logs/linter.log 2>&1

            echo -e "RUFF:" >> logs/linter.log
            ruff check $file >> logs/linter.log

            # echo -e "\n PYDOCSTYLE \n" >> logs/linter.log
            # pydocstyle . >> logs/linter.log 
            
            exit_code=$?
            if [ $exit_code -ne 0 ]; then
                fail=true
            fi
        fi

        if [[ $(uname -s) == "Linux" || $(uname -s) == "Darwin" ]]; then # for linux and MacOS
            cat logs/linter.log
        elif [[ $(uname -s) == "MINGW"* ]]; then  # Windows
            type logs/linter.log
        fi 
    done
    if   [ $fail ]; then
        echo "Python linters failed, Commit aborted."
        echo "Please check terminal or logs in logs/linters.log"
        exit 1
    fi
}

run_python_linters      

